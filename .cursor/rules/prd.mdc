# 📱 Fixigo – Product Requirements Document

## 🚀 Overview
**Fixigo** is a hyperlocal service marketplace app that connects users with nearby skilled workers such as mistris, plumbers, electricians, carpenters, and labourers. The goal is to make it quick and easy for users to book trusted professionals with real-time availability, in-app communication, and payment support.

---

## 🧩 Objective
Create an intuitive iOS app that:
- Lists nearby available workers based on service type
- Allows customers to book instantly or schedule jobs
- Offers real-time communication and payment integration
- Supports worker registration and profile management

---

## 👤 User Roles
- **Customer**: Can search, book, and review workers
- **Worker**: Can register, accept jobs, and manage bookings
- **Admin (later in web)**: Can manage users, review disputes, and verify worker profiles

---

## ✅ Features

### Core Features (MVP)
- User registration/login
- Search nearby workers
- Book service with scheduling
- In-app chat/video call (basic MVP = chat)
- View worker profiles with ratings
- In-app UPI-based payment
- Job tracking and history
- Reviews & ratings
- Push notifications

### Worker Features
- Worker registration & verification
- Set service types & availability
- Accept/decline job requests
- View job history & payments

### 🌈 Theme Management Feature
- Global theming system for the entire app
- Inspired by the project’s values: **Trust, Urgency, Professionalism**
- Theme will include:
  - Primary color: **#146C94** (deep blue) – trust & stability
  - Secondary color: **#19A7CE** (sky blue) – clarity & calm
  - Accent color: **#F79327** (orange) – urgency & action
  - Background: **#F1F6F9** – soft white/grey for cleanliness
  - Text: Dark shades of gray or black for contrast
- Easily swappable from a `Theme.swift` or `ThemeManager.swift` file
- All UI components use colors and fonts from this config for consistency

---

## 📜 User Stories

### Customer
- As a user, I can see a list of nearby available workers.
- As a user, I can view a worker’s profile with ratings and past work.
- As a user, I can schedule a job and get notifications.
- As a user, I can chat with the worker before confirming.
- As a user, I can pay through UPI and rate the service.

### Worker
- As a worker, I can register and upload my ID and work proof.
- As a worker, I can manage my availability.
- As a worker, I can receive booking requests and accept/reject them.
- As a worker, I can track earnings and view job history.

---

## 🏗️ Tech Stack (MVP)
- **Frontend:** SwiftUI (MVVM architecture)
- **Backend:** Firebase (Auth, Firestore, Realtime DB, Storage)
- **Maps & Location:** MapKit
- **Notifications:** Firebase Cloud Messaging
- **Payment:** Razorpay/UPI integration

---

## 🗂️ File/Folder Structure (SwiftUI + MVVM)

```plaintext
Fixigo/
│
├── App/
│   └── FixigoApp.swift                # App entry point
│
├── Resources/
│   ├── Assets.xcassets/
│   ├── Localization/                 # For multi-language support
│   └── Theme/
│       ├── Theme.swift               # Theme struct with color & font config
│       └── ThemeManager.swift        # Logic to manage current theme
│
├── Models/
│   ├── UserModel.swift
│   ├── WorkerModel.swift
│   ├── BookingModel.swift
│   ├── ReviewModel.swift
│   └── PaymentModel.swift
│
├── Views/
│   ├── Onboarding/
│   │   ├── SplashView.swift
│   │   ├── LoginView.swift
│   │   └── SignupView.swift
│   │
│   ├── Home/
│   │   ├── HomeView.swift
│   │   ├── MapWorkerListView.swift
│   │   └── WorkerCardView.swift
│   │
│   ├── Booking/
│   │   ├── BookingFormView.swift
│   │   ├── BookingConfirmationView.swift
│   │   └── BookingHistoryView.swift
│   │
│   ├── Chat/
│   │   └── ChatView.swift
│   │
│   ├── Profile/
│   │   ├── UserProfileView.swift
│   │   └── WorkerProfileView.swift
│   │
│   └── Shared/
│       ├── AppButton.swift
│       ├── AppTextField.swift
│       └── LoadingView.swift
│
├── ViewModels/
│   ├── AuthViewModel.swift
│   ├── HomeViewModel.swift
│   ├── BookingViewModel.swift
│   ├── ChatViewModel.swift
│   ├── ProfileViewModel.swift
│   └── WorkerViewModel.swift
│
├── Services/
│   ├── AuthService.swift
│   ├── FirestoreService.swift
│   ├── LocationService.swift
│   ├── NotificationService.swift
│   ├── PaymentService.swift
│   └── ChatService.swift
│
├── Extensions/
│   ├── Color+Extensions.swift
│   ├── View+Modifiers.swift
│   └── Date+Extensions.swift
│
└── Utilities/
    ├── Constants.swift
    └── Enums.swift